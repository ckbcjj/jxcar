using DevExpress.Skins;
using DevExpress.Utils;
using DevExpress.Utils.Drawing;
using DevExpress.XtraBars;
using DevExpress.XtraBars.Commands;
using DevExpress.XtraBars.Ribbon.Gallery;
using DevExpress.XtraCharts;
using DevExpress.XtraCharts.UI;
using DevExpress.XtraEditors;
using DevExpress.XtraEditors.Controls;
using System;
using System.ComponentModel;
using System.Drawing;
using System.Windows.Forms;
using DevExpress.XtraBars.Ribbon;

namespace Teacher
{


    public class FrmHisOscillogram : XtraForm
    {
        private BarDockControl barDockControlBottom;
        private BarDockControl barDockControlLeft;
        private BarDockControl barDockControlRight;
        private BarDockControl barDockControlTop;
        private BarManager barManager1;
        private ChangeAppearanceGalleryBaseBarManagerItem changeAppearanceGalleryBaseBarManagerItem1;
        private ChangePaletteGalleryBaseItem changePaletteGalleryBaseItem1;
        private ChartAppearanceBar chartAppearanceBar1;
        private ChartBarController chartBarController1;
        private ChartControl chartControl1;
        private CheckEdit checkEdit1;
        private ColorEdit colorEdit1;
        private CommandBarGalleryDropDown commandBarGalleryDropDown1;
        private CommandBarGalleryDropDown commandBarGalleryDropDown2;
        private CommandBarGalleryDropDown commandBarGalleryDropDown3;
        private CommandBarGalleryDropDown commandBarGalleryDropDown4;
        private CommandBarGalleryDropDown commandBarGalleryDropDown5;
        private CommandBarGalleryDropDown commandBarGalleryDropDown6;
        private CommandBarGalleryDropDown commandBarGalleryDropDown7;
        private CommandBarGalleryDropDown commandBarGalleryDropDown8;
        private IContainer components;
        private CreateAreaBaseItem createAreaBaseItem1;
        private CreateBarBaseItem createBarBaseItem1;
        private CreateExportBaseItem createExportBaseItem1;
        private CreateExportToImageBaseItem createExportToImageBaseItem1;
        private CreateLineBaseItem createLineBaseItem1;
        private CreateOtherSeriesTypesBaseItem createOtherSeriesTypesBaseItem1;
        private CreatePieBaseItem createPieBaseItem1;
        private CreateRotatedBarBaseItem createRotatedBarBaseItem1;
        private ExportToBMPChartItem exportToBMPChartItem1;
        private ExportToGIFChartItem exportToGIFChartItem1;
        private ExportToHTMLChartItem exportToHTMLChartItem1;
        private ExportToJPEGChartItem exportToJPEGChartItem1;
        private ExportToMHTChartItem exportToMHTChartItem1;
        private ExportToPDFChartItem exportToPDFChartItem1;
        private ExportToPNGChartItem exportToPNGChartItem1;
        private ExportToRTFChartItem exportToRTFChartItem1;
        private ExportToTIFFChartItem exportToTIFFChartItem1;
        private ExportToXLSChartItem exportToXLSChartItem1;
        private ExportToXLSXChartItem exportToXLSXChartItem1;
        private GroupControl groupControl2;
        private LabelControl labelControl5;
        private LoadTemplateChartItem loadTemplateChartItem1;
        private PanelControl panelControl2;
        private PrintChartItem printChartItem1;
        private PrintPreviewChartItem printPreviewChartItem1;
        private RunWizardChartItem runWizardChartItem1;
        private SaveAsTemplateChartItem saveAsTemplateChartItem1;

        public FrmHisOscillogram()
        {
            this.InitializeComponent();
        }

        private void checkEdit1_CheckedChanged(object sender, EventArgs e)
        {
            if ((sender as CheckEdit).Checked)
            {
                this.diagram.AxisX.GridLines.Color = this.colorEdit1.Color;
                this.diagram.AxisX.GridLines.MinorColor = this.colorEdit1.Color;
                this.diagram.AxisX.GridLines.Visible = true;
                this.diagram.AxisX.GridLines.MinorVisible = true;
                this.diagram.AxisY.GridLines.MinorColor = this.colorEdit1.Color;
                this.diagram.AxisY.GridLines.Color = this.colorEdit1.Color;
                this.diagram.AxisY.GridLines.MinorVisible = true;
            }
            else
            {
                this.diagram.AxisX.GridLines.Color = Color.White;
                this.diagram.AxisX.GridLines.Visible = false;
                this.diagram.AxisX.GridLines.MinorVisible = false;
                this.diagram.AxisY.GridLines.MinorVisible = false;
            }
        }

        private void colorEdit1_EditValueChanged(object sender, EventArgs e)
        {
            this.diagram.AxisX.GridLines.Color = (sender as ColorEdit).Color;
            this.diagram.AxisX.GridLines.MinorColor = (sender as ColorEdit).Color;
            this.diagram.AxisY.GridLines.MinorColor = this.colorEdit1.Color;
            this.diagram.AxisY.GridLines.Color = this.colorEdit1.Color;
        }

        protected override void Dispose(bool disposing)
        {
            if (disposing && (this.components != null))
            {
                this.components.Dispose();
            }
            base.Dispose(disposing);
        }

        private void FrmHisOscillogram_Load(object sender, EventArgs e)
        {
            this.checkEdit1.Checked = false;
            this.Series1.Points.Add(new SeriesPoint(DateTime.Now));
            this.Series1.Points.Add(new SeriesPoint(DateTime.Now));
        }

        private void InitializeComponent()
        {
            this.components = new Container();
            SwiftPlotDiagram diagram = new SwiftPlotDiagram();
            Series series = new Series();
            SwiftPlotSeriesView view = new SwiftPlotSeriesView();
            Series series2 = new Series();
            SwiftPlotSeriesView view2 = new SwiftPlotSeriesView();
            SwiftPlotSeriesView view3 = new SwiftPlotSeriesView();
            SuperToolTip tip = new SuperToolTip();
            ToolTipTitleItem item = new ToolTipTitleItem();
            ToolTipItem item2 = new ToolTipItem();
            SuperToolTip tip2 = new SuperToolTip();
            ToolTipTitleItem item3 = new ToolTipTitleItem();
            ToolTipItem item4 = new ToolTipItem();
            SuperToolTip tip3 = new SuperToolTip();
            ToolTipTitleItem item5 = new ToolTipTitleItem();
            ToolTipItem item6 = new ToolTipItem();
            SuperToolTip tip4 = new SuperToolTip();
            ToolTipTitleItem item7 = new ToolTipTitleItem();
            ToolTipItem item8 = new ToolTipItem();
            SuperToolTip tip5 = new SuperToolTip();
            ToolTipTitleItem item9 = new ToolTipTitleItem();
            ToolTipItem item10 = new ToolTipItem();
            SkinPaddingEdges edges = new SkinPaddingEdges();
            SkinPaddingEdges edges2 = new SkinPaddingEdges();
            SuperToolTip tip6 = new SuperToolTip();
            ToolTipTitleItem item11 = new ToolTipTitleItem();
            ToolTipItem item12 = new ToolTipItem();
            SuperToolTip tip7 = new SuperToolTip();
            ToolTipTitleItem item13 = new ToolTipTitleItem();
            ToolTipItem item14 = new ToolTipItem();
            ChartControlCommandGalleryItemGroup2DColumn column = new ChartControlCommandGalleryItemGroup2DColumn();
            CreateBarChartItem item15 = new CreateBarChartItem();
            CreateFullStackedBarChartItem item16 = new CreateFullStackedBarChartItem();
            CreateSideBySideFullStackedBarChartItem item17 = new CreateSideBySideFullStackedBarChartItem();
            CreateSideBySideStackedBarChartItem item18 = new CreateSideBySideStackedBarChartItem();
            CreateStackedBarChartItem item19 = new CreateStackedBarChartItem();
            ChartControlCommandGalleryItemGroup3DColumn column2 = new ChartControlCommandGalleryItemGroup3DColumn();
            CreateBar3DChartItem item20 = new CreateBar3DChartItem();
            CreateFullStackedBar3DChartItem item21 = new CreateFullStackedBar3DChartItem();
            CreateManhattanBarChartItem item22 = new CreateManhattanBarChartItem();
            CreateSideBySideFullStackedBar3DChartItem item23 = new CreateSideBySideFullStackedBar3DChartItem();
            CreateSideBySideStackedBar3DChartItem item24 = new CreateSideBySideStackedBar3DChartItem();
            CreateStackedBar3DChartItem item25 = new CreateStackedBar3DChartItem();
            ChartControlCommandGalleryItemGroupCylinderColumn column3 = new ChartControlCommandGalleryItemGroupCylinderColumn();
            CreateCylinderBar3DChartItem item26 = new CreateCylinderBar3DChartItem();
            CreateCylinderFullStackedBar3DChartItem item27 = new CreateCylinderFullStackedBar3DChartItem();
            CreateCylinderManhattanBarChartItem item28 = new CreateCylinderManhattanBarChartItem();
            CreateCylinderSideBySideFullStackedBar3DChartItem item29 = new CreateCylinderSideBySideFullStackedBar3DChartItem();
            CreateCylinderSideBySideStackedBar3DChartItem item30 = new CreateCylinderSideBySideStackedBar3DChartItem();
            CreateCylinderStackedBar3DChartItem item31 = new CreateCylinderStackedBar3DChartItem();
            ChartControlCommandGalleryItemGroupConeColumn column4 = new ChartControlCommandGalleryItemGroupConeColumn();
            CreateConeBar3DChartItem item32 = new CreateConeBar3DChartItem();
            CreateConeFullStackedBar3DChartItem item33 = new CreateConeFullStackedBar3DChartItem();
            CreateConeManhattanBarChartItem item34 = new CreateConeManhattanBarChartItem();
            CreateConeSideBySideFullStackedBar3DChartItem item35 = new CreateConeSideBySideFullStackedBar3DChartItem();
            CreateConeSideBySideStackedBar3DChartItem item36 = new CreateConeSideBySideStackedBar3DChartItem();
            CreateConeStackedBar3DChartItem item37 = new CreateConeStackedBar3DChartItem();
            ChartControlCommandGalleryItemGroupPyramidColumn column5 = new ChartControlCommandGalleryItemGroupPyramidColumn();
            CreatePyramidBar3DChartItem item38 = new CreatePyramidBar3DChartItem();
            CreatePyramidFullStackedBar3DChartItem item39 = new CreatePyramidFullStackedBar3DChartItem();
            CreatePyramidManhattanBarChartItem item40 = new CreatePyramidManhattanBarChartItem();
            CreatePyramidSideBySideFullStackedBar3DChartItem item41 = new CreatePyramidSideBySideFullStackedBar3DChartItem();
            CreatePyramidSideBySideStackedBar3DChartItem item42 = new CreatePyramidSideBySideStackedBar3DChartItem();
            CreatePyramidStackedBar3DChartItem item43 = new CreatePyramidStackedBar3DChartItem();
            ChartControlCommandGalleryItemGroup2DLine line = new ChartControlCommandGalleryItemGroup2DLine();
            CreateLineChartItem item44 = new CreateLineChartItem();
            CreateFullStackedLineChartItem item45 = new CreateFullStackedLineChartItem();
            CreateScatterLineChartItem item46 = new CreateScatterLineChartItem();
            CreateSplineChartItem item47 = new CreateSplineChartItem();
            CreateStackedLineChartItem item48 = new CreateStackedLineChartItem();
            CreateStepLineChartItem item49 = new CreateStepLineChartItem();
            ChartControlCommandGalleryItemGroup3DLine line2 = new ChartControlCommandGalleryItemGroup3DLine();
            CreateLine3DChartItem item50 = new CreateLine3DChartItem();
            CreateFullStackedLine3DChartItem item51 = new CreateFullStackedLine3DChartItem();
            CreateSpline3DChartItem item52 = new CreateSpline3DChartItem();
            CreateStackedLine3DChartItem item53 = new CreateStackedLine3DChartItem();
            CreateStepLine3DChartItem item54 = new CreateStepLine3DChartItem();
            ChartControlCommandGalleryItemGroup2DPie pie = new ChartControlCommandGalleryItemGroup2DPie();
            CreatePieChartItem item55 = new CreatePieChartItem();
            CreateDoughnutChartItem item56 = new CreateDoughnutChartItem();
            ChartControlCommandGalleryItemGroup3DPie pie2 = new ChartControlCommandGalleryItemGroup3DPie();
            CreatePie3DChartItem item57 = new CreatePie3DChartItem();
            CreateDoughnut3DChartItem item58 = new CreateDoughnut3DChartItem();
            ChartControlCommandGalleryItemGroup2DBar bar = new ChartControlCommandGalleryItemGroup2DBar();
            CreateRotatedBarChartItem item59 = new CreateRotatedBarChartItem();
            CreateRotatedFullStackedBarChartItem item60 = new CreateRotatedFullStackedBarChartItem();
            CreateRotatedSideBySideFullStackedBarChartItem item61 = new CreateRotatedSideBySideFullStackedBarChartItem();
            CreateRotatedSideBySideStackedBarChartItem item62 = new CreateRotatedSideBySideStackedBarChartItem();
            CreateRotatedStackedBarChartItem item63 = new CreateRotatedStackedBarChartItem();
            ChartControlCommandGalleryItemGroup2DArea area = new ChartControlCommandGalleryItemGroup2DArea();
            CreateAreaChartItem item64 = new CreateAreaChartItem();
            CreateFullStackedAreaChartItem item65 = new CreateFullStackedAreaChartItem();
            CreateFullStackedSplineAreaChartItem item66 = new CreateFullStackedSplineAreaChartItem();
            CreateSplineAreaChartItem item67 = new CreateSplineAreaChartItem();
            CreateStackedAreaChartItem item68 = new CreateStackedAreaChartItem();
            CreateStackedSplineAreaChartItem item69 = new CreateStackedSplineAreaChartItem();
            CreateStepAreaChartItem item70 = new CreateStepAreaChartItem();
            ChartControlCommandGalleryItemGroup3DArea area2 = new ChartControlCommandGalleryItemGroup3DArea();
            CreateArea3DChartItem item71 = new CreateArea3DChartItem();
            CreateFullStackedArea3DChartItem item72 = new CreateFullStackedArea3DChartItem();
            CreateFullStackedSplineArea3DChartItem item73 = new CreateFullStackedSplineArea3DChartItem();
            CreateSplineArea3DChartItem item74 = new CreateSplineArea3DChartItem();
            CreateStackedArea3DChartItem item75 = new CreateStackedArea3DChartItem();
            CreateStackedSplineArea3DChartItem item76 = new CreateStackedSplineArea3DChartItem();
            CreateStepArea3DChartItem item77 = new CreateStepArea3DChartItem();
            ChartControlCommandGalleryItemGroupPoint point = new ChartControlCommandGalleryItemGroupPoint();
            CreatePointChartItem item78 = new CreatePointChartItem();
            CreateBubbleChartItem item79 = new CreateBubbleChartItem();
            ChartControlCommandGalleryItemGroupFunnel funnel = new ChartControlCommandGalleryItemGroupFunnel();
            CreateFunnelChartItem item80 = new CreateFunnelChartItem();
            CreateFunnel3DChartItem item81 = new CreateFunnel3DChartItem();
            ChartControlCommandGalleryItemGroupFinancial financial = new ChartControlCommandGalleryItemGroupFinancial();
            CreateStockChartItem item82 = new CreateStockChartItem();
            CreateCandleStickChartItem item83 = new CreateCandleStickChartItem();
            ChartControlCommandGalleryItemGroupRadar radar = new ChartControlCommandGalleryItemGroupRadar();
            CreateRadarPointChartItem item84 = new CreateRadarPointChartItem();
            CreateRadarLineChartItem item85 = new CreateRadarLineChartItem();
            CreateRadarAreaChartItem item86 = new CreateRadarAreaChartItem();
            ChartControlCommandGalleryItemGroupPolar polar = new ChartControlCommandGalleryItemGroupPolar();
            CreatePolarPointChartItem item87 = new CreatePolarPointChartItem();
            CreatePolarLineChartItem item88 = new CreatePolarLineChartItem();
            CreatePolarAreaChartItem item89 = new CreatePolarAreaChartItem();
            ChartControlCommandGalleryItemGroupRange range = new ChartControlCommandGalleryItemGroupRange();
            CreateRangeBarChartItem item90 = new CreateRangeBarChartItem();
            CreateSideBySideRangeBarChartItem item91 = new CreateSideBySideRangeBarChartItem();
            CreateRangeAreaChartItem item92 = new CreateRangeAreaChartItem();
            CreateRangeArea3DChartItem item93 = new CreateRangeArea3DChartItem();
            ChartControlCommandGalleryItemGroupGantt gantt = new ChartControlCommandGalleryItemGroupGantt();
            CreateGanttChartItem item94 = new CreateGanttChartItem();
            CreateSideBySideGanttChartItem item95 = new CreateSideBySideGanttChartItem();
            this.panelControl2 = new PanelControl();
            this.chartControl1 = new ChartControl();
            this.groupControl2 = new GroupControl();
            this.labelControl5 = new LabelControl();
            this.colorEdit1 = new ColorEdit();
            this.barManager1 = new BarManager(this.components);
            this.chartAppearanceBar1 = new ChartAppearanceBar();
            this.loadTemplateChartItem1 = new LoadTemplateChartItem();
            this.saveAsTemplateChartItem1 = new SaveAsTemplateChartItem();
            this.printPreviewChartItem1 = new PrintPreviewChartItem();
            this.printChartItem1 = new PrintChartItem();
            this.changePaletteGalleryBaseItem1 = new ChangePaletteGalleryBaseItem();
            this.commandBarGalleryDropDown7 = new CommandBarGalleryDropDown(this.components);
            this.changeAppearanceGalleryBaseBarManagerItem1 = new ChangeAppearanceGalleryBaseBarManagerItem();
            this.commandBarGalleryDropDown8 = new CommandBarGalleryDropDown(this.components);
            this.createExportBaseItem1 = new CreateExportBaseItem();
            this.exportToPDFChartItem1 = new ExportToPDFChartItem();
            this.exportToHTMLChartItem1 = new ExportToHTMLChartItem();
            this.exportToMHTChartItem1 = new ExportToMHTChartItem();
            this.exportToXLSChartItem1 = new ExportToXLSChartItem();
            this.exportToXLSXChartItem1 = new ExportToXLSXChartItem();
            this.exportToRTFChartItem1 = new ExportToRTFChartItem();
            this.createExportToImageBaseItem1 = new CreateExportToImageBaseItem();
            this.exportToBMPChartItem1 = new ExportToBMPChartItem();
            this.exportToGIFChartItem1 = new ExportToGIFChartItem();
            this.exportToJPEGChartItem1 = new ExportToJPEGChartItem();
            this.exportToPNGChartItem1 = new ExportToPNGChartItem();
            this.exportToTIFFChartItem1 = new ExportToTIFFChartItem();
            this.barDockControlTop = new BarDockControl();
            this.barDockControlBottom = new BarDockControl();
            this.barDockControlLeft = new BarDockControl();
            this.barDockControlRight = new BarDockControl();
            this.createBarBaseItem1 = new CreateBarBaseItem();
            this.commandBarGalleryDropDown1 = new CommandBarGalleryDropDown(this.components);
            this.createLineBaseItem1 = new CreateLineBaseItem();
            this.commandBarGalleryDropDown2 = new CommandBarGalleryDropDown(this.components);
            this.createPieBaseItem1 = new CreatePieBaseItem();
            this.commandBarGalleryDropDown3 = new CommandBarGalleryDropDown(this.components);
            this.createRotatedBarBaseItem1 = new CreateRotatedBarBaseItem();
            this.commandBarGalleryDropDown4 = new CommandBarGalleryDropDown(this.components);
            this.createAreaBaseItem1 = new CreateAreaBaseItem();
            this.commandBarGalleryDropDown5 = new CommandBarGalleryDropDown(this.components);
            this.createOtherSeriesTypesBaseItem1 = new CreateOtherSeriesTypesBaseItem();
            this.commandBarGalleryDropDown6 = new CommandBarGalleryDropDown(this.components);
            this.runWizardChartItem1 = new RunWizardChartItem();
            this.checkEdit1 = new CheckEdit();
            this.chartBarController1 = new ChartBarController();
            this.panelControl2.BeginInit();
            this.panelControl2.SuspendLayout();
            this.chartControl1.BeginInit();
            ((ISupportInitialize) diagram).BeginInit();
            ((ISupportInitialize) series).BeginInit();
            ((ISupportInitialize) view).BeginInit();
            ((ISupportInitialize) series2).BeginInit();
            ((ISupportInitialize) view2).BeginInit();
            ((ISupportInitialize) view3).BeginInit();
            this.groupControl2.BeginInit();
            this.groupControl2.SuspendLayout();
            this.colorEdit1.Properties.BeginInit();
            this.barManager1.BeginInit();
            this.commandBarGalleryDropDown7.BeginInit();
            this.commandBarGalleryDropDown8.BeginInit();
            this.commandBarGalleryDropDown1.BeginInit();
            this.commandBarGalleryDropDown2.BeginInit();
            this.commandBarGalleryDropDown3.BeginInit();
            this.commandBarGalleryDropDown4.BeginInit();
            this.commandBarGalleryDropDown5.BeginInit();
            this.commandBarGalleryDropDown6.BeginInit();
            this.checkEdit1.Properties.BeginInit();
            ((ISupportInitialize) this.chartBarController1).BeginInit();
            base.SuspendLayout();
            this.panelControl2.Controls.Add(this.chartControl1);
            this.panelControl2.Dock = DockStyle.Fill;
            this.panelControl2.Location = new Point(0, 0x1f);
            this.panelControl2.Name = "panelControl2";
            this.panelControl2.Size = new Size(0x377, 0x1ab);
            this.panelControl2.TabIndex = 1;
            diagram.AxisX.GridLines.Color = Color.LightGray;
            diagram.AxisX.GridLines.MinorColor = Color.LightGray;
            diagram.AxisX.VisibleInPanesSerializable = "-1";
            diagram.AxisY.GridLines.Color = Color.White;
            diagram.AxisY.GridLines.MinorColor = Color.LightGray;
            diagram.AxisY.Interlaced = true;
            diagram.AxisY.VisibleInPanesSerializable = "-1";
            diagram.EnableAxisXScrolling = true;
            diagram.EnableAxisXZooming = true;
            diagram.EnableAxisYScrolling = true;
            diagram.EnableAxisYZooming = true;
            this.chartControl1.Diagram = diagram;
            this.chartControl1.Dock = DockStyle.Fill;
            this.chartControl1.Location = new Point(2, 2);
            this.chartControl1.Name = "chartControl1";
            series.ArgumentScaleType = ScaleType.DateTime;
            series.CrosshairEnabled = DefaultBoolean.True;
            series.CrosshairHighlightPoints = DefaultBoolean.True;
            series.CrosshairLabelPattern = "{A:yyyy/MM/dd HH:mm:ss fff}";
            series.CrosshairLabelVisibility = DefaultBoolean.True;
            series.LegendText = "实时波形";
            series.Name = "实时波形";
            series.View = view;
            series2.ArgumentScaleType = ScaleType.DateTime;
            series2.CrosshairEnabled = DefaultBoolean.True;
            series2.CrosshairHighlightPoints = DefaultBoolean.True;
            series2.CrosshairLabelPattern = "{A:yyyy/MM/dd HH:mm:ss fff}";
            series2.CrosshairLabelVisibility = DefaultBoolean.True;
            series2.LegendText = "标准波形";
            series2.Name = "标准波形";
            series2.View = view2;
            this.chartControl1.SeriesSerializable = new Series[] { series, series2 };
            this.chartControl1.SeriesTemplate.View = view3;
            this.chartControl1.Size = new Size(0x373, 0x1a7);
            this.chartControl1.TabIndex = 0;
            this.groupControl2.Controls.Add(this.labelControl5);
            this.groupControl2.Controls.Add(this.colorEdit1);
            this.groupControl2.Controls.Add(this.checkEdit1);
            this.groupControl2.Dock = DockStyle.Bottom;
            this.groupControl2.Location = new Point(0, 0x1ca);
            this.groupControl2.Name = "groupControl2";
            this.groupControl2.Size = new Size(0x377, 0x38);
            this.groupControl2.TabIndex = 2;
            this.groupControl2.Text = "参数设定";
            this.labelControl5.Location = new Point(0x66, 0x1c);
            this.labelControl5.Name = "labelControl5";
            this.labelControl5.Size = new Size(60, 14);
            this.labelControl5.TabIndex = 0x13;
            this.labelControl5.Text = "网格颜色：";
            this.colorEdit1.EditValue = Color.Empty;
            this.colorEdit1.Location = new Point(0xa8, 0x18);
            this.colorEdit1.MenuManager = this.barManager1;
            this.colorEdit1.Name = "colorEdit1";
            this.colorEdit1.Properties.Buttons.AddRange(new EditorButton[] { new EditorButton(ButtonPredefines.Combo) });
            this.colorEdit1.Size = new Size(0x3d, 20);
            this.colorEdit1.TabIndex = 0x12;
            this.colorEdit1.EditValueChanged += new EventHandler(this.colorEdit1_EditValueChanged);
            this.barManager1.AllowQuickCustomization = false;
            this.barManager1.Bars.AddRange(new Bar[] { this.chartAppearanceBar1 });
            this.barManager1.DockControls.Add(this.barDockControlTop);
            this.barManager1.DockControls.Add(this.barDockControlBottom);
            this.barManager1.DockControls.Add(this.barDockControlLeft);
            this.barManager1.DockControls.Add(this.barDockControlRight);
            this.barManager1.Form = this;
            this.barManager1.Items.AddRange(new BarItem[] { 
                this.createBarBaseItem1, this.createLineBaseItem1, this.createPieBaseItem1, this.createRotatedBarBaseItem1, this.createAreaBaseItem1, this.createOtherSeriesTypesBaseItem1, this.changePaletteGalleryBaseItem1, this.changeAppearanceGalleryBaseBarManagerItem1, this.runWizardChartItem1, this.saveAsTemplateChartItem1, this.loadTemplateChartItem1, this.printPreviewChartItem1, this.printChartItem1, this.createExportBaseItem1, this.exportToPDFChartItem1, this.exportToHTMLChartItem1, 
                this.exportToMHTChartItem1, this.exportToXLSChartItem1, this.exportToXLSXChartItem1, this.exportToRTFChartItem1, this.exportToBMPChartItem1, this.exportToGIFChartItem1, this.exportToJPEGChartItem1, this.exportToPNGChartItem1, this.exportToTIFFChartItem1, this.createExportToImageBaseItem1
             });
            this.barManager1.MaxItemId = 0x1a;
            this.chartAppearanceBar1.Control = this.chartControl1;
            this.chartAppearanceBar1.DockCol = 0;
            this.chartAppearanceBar1.DockRow = 0;
            this.chartAppearanceBar1.DockStyle = BarDockStyle.Top;
            this.chartAppearanceBar1.LinksPersistInfo.AddRange(new LinkPersistInfo[] { new LinkPersistInfo(BarLinkUserDefines.PaintStyle, this.loadTemplateChartItem1, BarItemPaintStyle.CaptionGlyph), new LinkPersistInfo(BarLinkUserDefines.PaintStyle, this.saveAsTemplateChartItem1, BarItemPaintStyle.CaptionGlyph), new LinkPersistInfo(BarLinkUserDefines.PaintStyle, this.printPreviewChartItem1, BarItemPaintStyle.CaptionGlyph), new LinkPersistInfo(BarLinkUserDefines.PaintStyle, this.printChartItem1, BarItemPaintStyle.CaptionGlyph), new LinkPersistInfo(BarLinkUserDefines.PaintStyle, this.changePaletteGalleryBaseItem1, BarItemPaintStyle.CaptionGlyph), new LinkPersistInfo(BarLinkUserDefines.PaintStyle, this.changeAppearanceGalleryBaseBarManagerItem1, BarItemPaintStyle.CaptionGlyph), new LinkPersistInfo(BarLinkUserDefines.PaintStyle, this.createExportBaseItem1, BarItemPaintStyle.CaptionGlyph) });
            this.chartAppearanceBar1.OptionsBar.DrawDragBorder = false;
            this.chartAppearanceBar1.OptionsBar.UseWholeRow = true;
            this.loadTemplateChartItem1.Caption = "导入波形";
            this.loadTemplateChartItem1.Id = 1;
            this.loadTemplateChartItem1.Name = "loadTemplateChartItem1";
            item.Text = "导入波形";
            item2.LeftIndent = 6;
            item2.Text = "将本地XML格式波形数据文件导入生成波形";
            tip.Items.Add(item);
            tip.Items.Add(item2);
            this.loadTemplateChartItem1.SuperTip = tip;
            this.saveAsTemplateChartItem1.Caption = "保存";
            this.saveAsTemplateChartItem1.Id = 0;
            this.saveAsTemplateChartItem1.Name = "saveAsTemplateChartItem1";
            item3.Text = "保存";
            item4.LeftIndent = 6;
            item4.Text = "以XML格式保存当前波形的数据";
            tip2.Items.Add(item3);
            tip2.Items.Add(item4);
            this.saveAsTemplateChartItem1.SuperTip = tip2;
            this.printPreviewChartItem1.Caption = "预览";
            this.printPreviewChartItem1.Id = 3;
            this.printPreviewChartItem1.Name = "printPreviewChartItem1";
            item5.Text = "预览";
            item6.LeftIndent = 6;
            item6.Text = "打印前预览和编辑波形";
            tip3.Items.Add(item5);
            tip3.Items.Add(item6);
            this.printPreviewChartItem1.SuperTip = tip3;
            this.printChartItem1.Caption = "打印";
            this.printChartItem1.Id = 2;
            this.printChartItem1.Name = "printChartItem1";
            item7.Text = "打印";
            item8.LeftIndent = 6;
            item8.Text = "选择打印机或其它打印设备打印当前波形";
            tip4.Items.Add(item7);
            tip4.Items.Add(item8);
            this.printChartItem1.SuperTip = tip4;
            this.changePaletteGalleryBaseItem1.Caption = "线条颜色";
            this.changePaletteGalleryBaseItem1.DropDownControl = this.commandBarGalleryDropDown7;
            this.changePaletteGalleryBaseItem1.Id = 4;
            this.changePaletteGalleryBaseItem1.Name = "changePaletteGalleryBaseItem1";
            item9.Text = "线条颜色";
            item10.LeftIndent = 6;
            item10.Text = "改变当前图表的线条样式";
            tip5.Items.Add(item9);
            tip5.Items.Add(item10);
            this.changePaletteGalleryBaseItem1.SuperTip = tip5;
            this.commandBarGalleryDropDown7.Gallery.AllowFilter = false;
            this.commandBarGalleryDropDown7.Gallery.Appearance.ItemCaptionAppearance.Hovered.Options.UseFont = true;
            this.commandBarGalleryDropDown7.Gallery.Appearance.ItemCaptionAppearance.Hovered.Options.UseTextOptions = true;
            this.commandBarGalleryDropDown7.Gallery.Appearance.ItemCaptionAppearance.Hovered.TextOptions.HAlignment = HorzAlignment.Near;
            this.commandBarGalleryDropDown7.Gallery.Appearance.ItemCaptionAppearance.Normal.Options.UseFont = true;
            this.commandBarGalleryDropDown7.Gallery.Appearance.ItemCaptionAppearance.Normal.Options.UseTextOptions = true;
            this.commandBarGalleryDropDown7.Gallery.Appearance.ItemCaptionAppearance.Normal.TextOptions.HAlignment = HorzAlignment.Near;
            this.commandBarGalleryDropDown7.Gallery.Appearance.ItemCaptionAppearance.Pressed.Options.UseFont = true;
            this.commandBarGalleryDropDown7.Gallery.Appearance.ItemCaptionAppearance.Pressed.Options.UseTextOptions = true;
            this.commandBarGalleryDropDown7.Gallery.Appearance.ItemCaptionAppearance.Pressed.TextOptions.HAlignment = HorzAlignment.Near;
            this.commandBarGalleryDropDown7.Gallery.Appearance.ItemDescriptionAppearance.Hovered.Options.UseFont = true;
            this.commandBarGalleryDropDown7.Gallery.Appearance.ItemDescriptionAppearance.Hovered.Options.UseTextOptions = true;
            this.commandBarGalleryDropDown7.Gallery.Appearance.ItemDescriptionAppearance.Hovered.TextOptions.HAlignment = HorzAlignment.Near;
            this.commandBarGalleryDropDown7.Gallery.Appearance.ItemDescriptionAppearance.Normal.Options.UseFont = true;
            this.commandBarGalleryDropDown7.Gallery.Appearance.ItemDescriptionAppearance.Normal.Options.UseTextOptions = true;
            this.commandBarGalleryDropDown7.Gallery.Appearance.ItemDescriptionAppearance.Normal.TextOptions.HAlignment = HorzAlignment.Near;
            this.commandBarGalleryDropDown7.Gallery.Appearance.ItemDescriptionAppearance.Pressed.Options.UseFont = true;
            this.commandBarGalleryDropDown7.Gallery.Appearance.ItemDescriptionAppearance.Pressed.Options.UseTextOptions = true;
            this.commandBarGalleryDropDown7.Gallery.Appearance.ItemDescriptionAppearance.Pressed.TextOptions.HAlignment = HorzAlignment.Near;
            this.commandBarGalleryDropDown7.Gallery.ColumnCount = 1;
            this.commandBarGalleryDropDown7.Gallery.ImageSize = new Size(160, 10);
            this.commandBarGalleryDropDown7.Gallery.ItemImageLayout = ImageLayoutMode.MiddleLeft;
            this.commandBarGalleryDropDown7.Gallery.ItemImageLocation = Locations.Right;
            edges.Bottom = -3;
            edges.Top = -3;
            this.commandBarGalleryDropDown7.Gallery.ItemImagePadding = edges;
            edges2.Bottom = -3;
            edges2.Top = -3;
            this.commandBarGalleryDropDown7.Gallery.ItemTextPadding = edges2;
            this.commandBarGalleryDropDown7.Gallery.RowCount = 10;
            this.commandBarGalleryDropDown7.Gallery.ShowGroupCaption = false;
            this.commandBarGalleryDropDown7.Gallery.ShowItemText = true;
            this.commandBarGalleryDropDown7.Gallery.ShowScrollBar = ShowScrollBar.Auto;
            this.commandBarGalleryDropDown7.Manager = this.barManager1;
            this.commandBarGalleryDropDown7.Name = "commandBarGalleryDropDown7";
            this.changeAppearanceGalleryBaseBarManagerItem1.Caption = "画板";
            this.changeAppearanceGalleryBaseBarManagerItem1.DropDownControl = this.commandBarGalleryDropDown8;
            this.changeAppearanceGalleryBaseBarManagerItem1.Id = 5;
            this.changeAppearanceGalleryBaseBarManagerItem1.Name = "changeAppearanceGalleryBaseBarManagerItem1";
            item11.Text = "画板";
            item12.LeftIndent = 6;
            item12.Text = "包含通过选择调色板来改变其外观的一系列样式的图表";
            tip6.Items.Add(item11);
            tip6.Items.Add(item12);
            this.changeAppearanceGalleryBaseBarManagerItem1.SuperTip = tip6;
            this.commandBarGalleryDropDown8.Gallery.AllowFilter = false;
            this.commandBarGalleryDropDown8.Gallery.ColumnCount = 7;
            this.commandBarGalleryDropDown8.Gallery.ImageSize = new Size(80, 50);
            this.commandBarGalleryDropDown8.Gallery.RowCount = 4;
            this.commandBarGalleryDropDown8.Gallery.ShowGroupCaption = false;
            this.commandBarGalleryDropDown8.Gallery.ShowScrollBar = ShowScrollBar.Auto;
            this.commandBarGalleryDropDown8.Manager = this.barManager1;
            this.commandBarGalleryDropDown8.Name = "commandBarGalleryDropDown8";
            this.createExportBaseItem1.Caption = "导出  ";
            this.createExportBaseItem1.Id = 6;
            this.createExportBaseItem1.LinksPersistInfo.AddRange(new LinkPersistInfo[] { new LinkPersistInfo(this.exportToPDFChartItem1), new LinkPersistInfo(this.exportToHTMLChartItem1), new LinkPersistInfo(this.exportToMHTChartItem1), new LinkPersistInfo(this.exportToXLSChartItem1), new LinkPersistInfo(this.exportToXLSXChartItem1), new LinkPersistInfo(this.exportToRTFChartItem1), new LinkPersistInfo(this.createExportToImageBaseItem1) });
            this.createExportBaseItem1.MenuDrawMode = MenuDrawMode.SmallImagesText;
            this.createExportBaseItem1.Name = "createExportBaseItem1";
            item13.Text = "导出";
            item14.LeftIndent = 6;
            item14.Text = "可将当前波形导出为指定格式的的文件并保存";
            tip7.Items.Add(item13);
            tip7.Items.Add(item14);
            this.createExportBaseItem1.SuperTip = tip7;
            this.exportToPDFChartItem1.Id = 7;
            this.exportToPDFChartItem1.Name = "exportToPDFChartItem1";
            this.exportToHTMLChartItem1.Id = 8;
            this.exportToHTMLChartItem1.Name = "exportToHTMLChartItem1";
            this.exportToMHTChartItem1.Id = 9;
            this.exportToMHTChartItem1.Name = "exportToMHTChartItem1";
            this.exportToXLSChartItem1.Id = 10;
            this.exportToXLSChartItem1.Name = "exportToXLSChartItem1";
            this.exportToXLSXChartItem1.Id = 11;
            this.exportToXLSXChartItem1.Name = "exportToXLSXChartItem1";
            this.exportToRTFChartItem1.Id = 12;
            this.exportToRTFChartItem1.Name = "exportToRTFChartItem1";
            this.createExportToImageBaseItem1.Id = 13;
            this.createExportToImageBaseItem1.LinksPersistInfo.AddRange(new LinkPersistInfo[] { new LinkPersistInfo(this.exportToBMPChartItem1), new LinkPersistInfo(this.exportToGIFChartItem1), new LinkPersistInfo(this.exportToJPEGChartItem1), new LinkPersistInfo(this.exportToPNGChartItem1), new LinkPersistInfo(this.exportToTIFFChartItem1) });
            this.createExportToImageBaseItem1.MenuDrawMode = MenuDrawMode.SmallImagesText;
            this.createExportToImageBaseItem1.Name = "createExportToImageBaseItem1";
            this.exportToBMPChartItem1.Id = 14;
            this.exportToBMPChartItem1.Name = "exportToBMPChartItem1";
            this.exportToGIFChartItem1.Id = 15;
            this.exportToGIFChartItem1.Name = "exportToGIFChartItem1";
            this.exportToJPEGChartItem1.Id = 0x10;
            this.exportToJPEGChartItem1.Name = "exportToJPEGChartItem1";
            this.exportToPNGChartItem1.Id = 0x11;
            this.exportToPNGChartItem1.Name = "exportToPNGChartItem1";
            this.exportToTIFFChartItem1.Id = 0x12;
            this.exportToTIFFChartItem1.Name = "exportToTIFFChartItem1";
            this.barDockControlTop.CausesValidation = false;
            this.barDockControlTop.Dock = DockStyle.Top;
            this.barDockControlTop.Location = new Point(0, 0);
            this.barDockControlTop.Size = new Size(0x377, 0x1f);
            this.barDockControlBottom.CausesValidation = false;
            this.barDockControlBottom.Dock = DockStyle.Bottom;
            this.barDockControlBottom.Location = new Point(0, 0x202);
            this.barDockControlBottom.Size = new Size(0x377, 0);
            this.barDockControlLeft.CausesValidation = false;
            this.barDockControlLeft.Dock = DockStyle.Left;
            this.barDockControlLeft.Location = new Point(0, 0x1f);
            this.barDockControlLeft.Size = new Size(0, 0x1e3);
            this.barDockControlRight.CausesValidation = false;
            this.barDockControlRight.Dock = DockStyle.Right;
            this.barDockControlRight.Location = new Point(0x377, 0x1f);
            this.barDockControlRight.Size = new Size(0, 0x1e3);
            this.createBarBaseItem1.DropDownControl = this.commandBarGalleryDropDown1;
            this.createBarBaseItem1.Id = 0x13;
            this.createBarBaseItem1.Name = "createBarBaseItem1";
            this.commandBarGalleryDropDown1.Gallery.AllowFilter = false;
            this.commandBarGalleryDropDown1.Gallery.ColumnCount = 4;
            column.Items.AddRange(new GalleryItem[] { item15, item16, item17, item18, item19 });
            column2.Items.AddRange(new GalleryItem[] { item20, item21, item22, item23, item24, item25 });
            column3.Items.AddRange(new GalleryItem[] { item26, item27, item28, item29, item30, item31 });
            column4.Items.AddRange(new GalleryItem[] { item32, item33, item34, item35, item36, item37 });
            column5.Items.AddRange(new GalleryItem[] { item38, item39, item40, item41, item42, item43 });
            this.commandBarGalleryDropDown1.Gallery.Groups.AddRange(new GalleryItemGroup[] { column, column2, column3, column4, column5 });
            this.commandBarGalleryDropDown1.Gallery.ImageSize = new Size(0x20, 0x20);
            this.commandBarGalleryDropDown1.Gallery.RowCount = 10;
            this.commandBarGalleryDropDown1.Gallery.ShowScrollBar = ShowScrollBar.Auto;
            this.commandBarGalleryDropDown1.Manager = this.barManager1;
            this.commandBarGalleryDropDown1.Name = "commandBarGalleryDropDown1";
            this.createLineBaseItem1.DropDownControl = this.commandBarGalleryDropDown2;
            this.createLineBaseItem1.Id = 20;
            this.createLineBaseItem1.Name = "createLineBaseItem1";
            this.commandBarGalleryDropDown2.Gallery.AllowFilter = false;
            this.commandBarGalleryDropDown2.Gallery.ColumnCount = 3;
            line.Items.AddRange(new GalleryItem[] { item44, item45, item46, item47, item48, item49 });
            line2.Items.AddRange(new GalleryItem[] { item50, item51, item52, item53, item54 });
            this.commandBarGalleryDropDown2.Gallery.Groups.AddRange(new GalleryItemGroup[] { line, line2 });
            this.commandBarGalleryDropDown2.Gallery.ImageSize = new Size(0x20, 0x20);
            this.commandBarGalleryDropDown2.Gallery.RowCount = 4;
            this.commandBarGalleryDropDown2.Gallery.ShowScrollBar = ShowScrollBar.Auto;
            this.commandBarGalleryDropDown2.Manager = this.barManager1;
            this.commandBarGalleryDropDown2.Name = "commandBarGalleryDropDown2";
            this.createPieBaseItem1.DropDownControl = this.commandBarGalleryDropDown3;
            this.createPieBaseItem1.Id = 0x15;
            this.createPieBaseItem1.Name = "createPieBaseItem1";
            this.commandBarGalleryDropDown3.Gallery.AllowFilter = false;
            this.commandBarGalleryDropDown3.Gallery.ColumnCount = 2;
            pie.Items.AddRange(new GalleryItem[] { item55, item56 });
            pie2.Items.AddRange(new GalleryItem[] { item57, item58 });
            this.commandBarGalleryDropDown3.Gallery.Groups.AddRange(new GalleryItemGroup[] { pie, pie2 });
            this.commandBarGalleryDropDown3.Gallery.ImageSize = new Size(0x20, 0x20);
            this.commandBarGalleryDropDown3.Gallery.RowCount = 2;
            this.commandBarGalleryDropDown3.Gallery.ShowScrollBar = ShowScrollBar.Auto;
            this.commandBarGalleryDropDown3.Manager = this.barManager1;
            this.commandBarGalleryDropDown3.Name = "commandBarGalleryDropDown3";
            this.createRotatedBarBaseItem1.DropDownControl = this.commandBarGalleryDropDown4;
            this.createRotatedBarBaseItem1.Id = 0x16;
            this.createRotatedBarBaseItem1.Name = "createRotatedBarBaseItem1";
            this.commandBarGalleryDropDown4.Gallery.AllowFilter = false;
            this.commandBarGalleryDropDown4.Gallery.ColumnCount = 3;
            bar.Items.AddRange(new GalleryItem[] { item59, item60, item61, item62, item63 });
            this.commandBarGalleryDropDown4.Gallery.Groups.AddRange(new GalleryItemGroup[] { bar });
            this.commandBarGalleryDropDown4.Gallery.ImageSize = new Size(0x20, 0x20);
            this.commandBarGalleryDropDown4.Gallery.RowCount = 2;
            this.commandBarGalleryDropDown4.Gallery.ShowScrollBar = ShowScrollBar.Auto;
            this.commandBarGalleryDropDown4.Manager = this.barManager1;
            this.commandBarGalleryDropDown4.Name = "commandBarGalleryDropDown4";
            this.createAreaBaseItem1.DropDownControl = this.commandBarGalleryDropDown5;
            this.createAreaBaseItem1.Id = 0x17;
            this.createAreaBaseItem1.Name = "createAreaBaseItem1";
            this.commandBarGalleryDropDown5.Gallery.AllowFilter = false;
            this.commandBarGalleryDropDown5.Gallery.ColumnCount = 4;
            area.Items.AddRange(new GalleryItem[] { item64, item65, item66, item67, item68, item69, item70 });
            area2.Items.AddRange(new GalleryItem[] { item71, item72, item73, item74, item75, item76, item77 });
            this.commandBarGalleryDropDown5.Gallery.Groups.AddRange(new GalleryItemGroup[] { area, area2 });
            this.commandBarGalleryDropDown5.Gallery.ImageSize = new Size(0x20, 0x20);
            this.commandBarGalleryDropDown5.Gallery.RowCount = 4;
            this.commandBarGalleryDropDown5.Gallery.ShowScrollBar = ShowScrollBar.Auto;
            this.commandBarGalleryDropDown5.Manager = this.barManager1;
            this.commandBarGalleryDropDown5.Name = "commandBarGalleryDropDown5";
            this.createOtherSeriesTypesBaseItem1.DropDownControl = this.commandBarGalleryDropDown6;
            this.createOtherSeriesTypesBaseItem1.Id = 0x18;
            this.createOtherSeriesTypesBaseItem1.Name = "createOtherSeriesTypesBaseItem1";
            this.commandBarGalleryDropDown6.Gallery.AllowFilter = false;
            this.commandBarGalleryDropDown6.Gallery.ColumnCount = 4;
            point.Items.AddRange(new GalleryItem[] { item78, item79 });
            funnel.Items.AddRange(new GalleryItem[] { item80, item81 });
            financial.Items.AddRange(new GalleryItem[] { item82, item83 });
            radar.Items.AddRange(new GalleryItem[] { item84, item85, item86 });
            polar.Items.AddRange(new GalleryItem[] { item87, item88, item89 });
            range.Items.AddRange(new GalleryItem[] { item90, item91, item92, item93 });
            gantt.Items.AddRange(new GalleryItem[] { item94, item95 });
            this.commandBarGalleryDropDown6.Gallery.Groups.AddRange(new GalleryItemGroup[] { point, funnel, financial, radar, polar, range, gantt });
            this.commandBarGalleryDropDown6.Gallery.ImageSize = new Size(0x20, 0x20);
            this.commandBarGalleryDropDown6.Gallery.RowCount = 7;
            this.commandBarGalleryDropDown6.Gallery.ShowScrollBar = ShowScrollBar.Auto;
            this.commandBarGalleryDropDown6.Manager = this.barManager1;
            this.commandBarGalleryDropDown6.Name = "commandBarGalleryDropDown6";
            this.runWizardChartItem1.Id = 0x19;
            this.runWizardChartItem1.Name = "runWizardChartItem1";
            this.checkEdit1.Location = new Point(6, 0x19);
            this.checkEdit1.MenuManager = this.barManager1;
            this.checkEdit1.Name = "checkEdit1";
            this.checkEdit1.Properties.Caption = "网格线";
            this.checkEdit1.Size = new Size(0x4b, 0x13);
            this.checkEdit1.TabIndex = 0x11;
            this.checkEdit1.CheckedChanged += new EventHandler(this.checkEdit1_CheckedChanged);
            this.chartBarController1.BarItems.Add(this.createBarBaseItem1);
            this.chartBarController1.BarItems.Add(this.createLineBaseItem1);
            this.chartBarController1.BarItems.Add(this.createPieBaseItem1);
            this.chartBarController1.BarItems.Add(this.createRotatedBarBaseItem1);
            this.chartBarController1.BarItems.Add(this.createAreaBaseItem1);
            this.chartBarController1.BarItems.Add(this.createOtherSeriesTypesBaseItem1);
            this.chartBarController1.BarItems.Add(this.changePaletteGalleryBaseItem1);
            this.chartBarController1.BarItems.Add(this.changeAppearanceGalleryBaseBarManagerItem1);
            this.chartBarController1.BarItems.Add(this.runWizardChartItem1);
            this.chartBarController1.BarItems.Add(this.saveAsTemplateChartItem1);
            this.chartBarController1.BarItems.Add(this.loadTemplateChartItem1);
            this.chartBarController1.BarItems.Add(this.printPreviewChartItem1);
            this.chartBarController1.BarItems.Add(this.printChartItem1);
            this.chartBarController1.BarItems.Add(this.createExportBaseItem1);
            this.chartBarController1.BarItems.Add(this.exportToPDFChartItem1);
            this.chartBarController1.BarItems.Add(this.exportToHTMLChartItem1);
            this.chartBarController1.BarItems.Add(this.exportToMHTChartItem1);
            this.chartBarController1.BarItems.Add(this.exportToXLSChartItem1);
            this.chartBarController1.BarItems.Add(this.exportToXLSXChartItem1);
            this.chartBarController1.BarItems.Add(this.exportToRTFChartItem1);
            this.chartBarController1.BarItems.Add(this.createExportToImageBaseItem1);
            this.chartBarController1.BarItems.Add(this.exportToBMPChartItem1);
            this.chartBarController1.BarItems.Add(this.exportToGIFChartItem1);
            this.chartBarController1.BarItems.Add(this.exportToJPEGChartItem1);
            this.chartBarController1.BarItems.Add(this.exportToPNGChartItem1);
            this.chartBarController1.BarItems.Add(this.exportToTIFFChartItem1);
            this.chartBarController1.Control = this.chartControl1;
            base.AutoScaleDimensions = new SizeF(7f, 14f);
            base.AutoScaleMode = AutoScaleMode.Font;
            base.ClientSize = new Size(0x377, 0x202);
            base.Controls.Add(this.panelControl2);
            base.Controls.Add(this.groupControl2);
            base.Controls.Add(this.barDockControlLeft);
            base.Controls.Add(this.barDockControlRight);
            base.Controls.Add(this.barDockControlBottom);
            base.Controls.Add(this.barDockControlTop);
            base.Name = "FrmHisOscillogram";
            this.Text = "历史波形";
            base.Load += new EventHandler(this.FrmHisOscillogram_Load);
            this.panelControl2.EndInit();
            this.panelControl2.ResumeLayout(false);
            ((ISupportInitialize) diagram).EndInit();
            ((ISupportInitialize) view).EndInit();
            ((ISupportInitialize) series).EndInit();
            ((ISupportInitialize) view2).EndInit();
            ((ISupportInitialize) series2).EndInit();
            ((ISupportInitialize) view3).EndInit();
            this.chartControl1.EndInit();
            this.groupControl2.EndInit();
            this.groupControl2.ResumeLayout(false);
            this.groupControl2.PerformLayout();
            this.colorEdit1.Properties.EndInit();
            this.barManager1.EndInit();
            this.commandBarGalleryDropDown7.EndInit();
            this.commandBarGalleryDropDown8.EndInit();
            this.commandBarGalleryDropDown1.EndInit();
            this.commandBarGalleryDropDown2.EndInit();
            this.commandBarGalleryDropDown3.EndInit();
            this.commandBarGalleryDropDown4.EndInit();
            this.commandBarGalleryDropDown5.EndInit();
            this.commandBarGalleryDropDown6.EndInit();
            this.checkEdit1.Properties.EndInit();
            ((ISupportInitialize) this.chartBarController1).EndInit();
            base.ResumeLayout(false);
        }

        private SwiftPlotDiagram diagram
        {
            get
            {
                return (this.chartControl1.Diagram as SwiftPlotDiagram);
            }
        }

        private Series Series1
        {
            get
            {
                if (this.chartControl1.Series.Count <= 0)
                {
                    return null;
                }
                return this.chartControl1.Series[0];
            }
        }

        private Series Series2
        {
            get
            {
                if (this.chartControl1.Series.Count <= 1)
                {
                    return null;
                }
                return this.chartControl1.Series[1];
            }
        }
    }
}

